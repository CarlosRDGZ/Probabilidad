help("cat")
print(3)
print("tres",3)
print("tres" + 3)
cat("tres = ", 3)
qnorm(1 - (0.95 / 2), 1, 0)
qnorm(1 - 0.95 / 2, 1, 0)
1/3
help("qnorm")
qnorm(1 - 0.95 / 2, 1, 0)
qnorm(1 - 0.95 / 2, 1, 0) = x
x = qnorm(1 - 0.95 / 2, 1, 0)
x = qnorm((1 - 0.95) / 2, 1, 0)
qnorm((1 - 0.95) / 2, 1, 0)
qnorm((1 - 0.95)/2, 1, 0)
qnorm((1 - 0.95)/2)
qnorm((1 - 0.95)/2,1)
qnorm((1 - 0.95)/2,0)
qnorm((1 - 0.95)/2,0,1)
qnorm(1-0.95/2,0,1)
qnorm(1-0.95/2,1,2)
qnorm(1-0.95/2,1,0)
qnorm((1-0.95)/2,1,0)
qnorm((1-0.95)/2,1)
qnorm((1-0.95)/2,)
qnorm((1-0.95)/2)
qnorm((1-0.95)/2)
qnorm((1-0.95)/2, 1, 0)
rnorm((1-0.95)/2, 1, 0)
norm((1-0.95)/2, 1, 0)
pnorm((1-0.95)/2, 1, 0)
pnorm((1-0.95)/2, 1)
rnorm((1-0.95)/2, 1, 0)
qnoim((1-0.95)/2, 1, 0)
qnorm((1-0.95)/2, 1, 0)
qnorm(1 - 0.95/2, 1, 0)
qnorm((1 - 0.95) / 2, 1, 0)
pnorm((1 - 0.95) / 2, 1, 0)
pnorm((1 - 0.95), 1, 0)
cat("li = p - Z*Sp", li)
pnorm((1 - 0.95) / 2, 1, 0)
N = 500 # estudiantes
# 1.-
N = 500 # estudiantes
n = 80 # estudiantes
x = 20 # estudiantes
# a) estimación puntal de la proporción
p = x/n
cat("p = ", p)
# b) estimación por intervalo de la proporción con una confianza de 95%
q = 1 - p
Sp2 = ((N - n) / N)(p * q / n)
Sp = Sp2 ^ (1 / 2)
Z = 1.96 #qnorm((1 - 0.95) / 2, 1, 0)
ls = p + Z * Sp
li = p - Z * Sp
print("p +- Z*Sp")
cat("ls = p + Z*Sp", ls)
cat("li = p - Z*Sp", li)
Sp2 = ((N - n) / N) * (p * q / n)
# 1.-
N = 500 # estudiantes
n = 80 # estudiantes
x = 20 # estudiantes
# a) estimación puntal de la proporción
p = x/n
cat("p = ", p)
# b) estimación por intervalo de la proporción con una confianza de 95%
q = 1 - p
Sp2 = ((N - n) / N) * (p * q / n)
Sp = Sp2 ^ (1 / 2)
Z = 1.96 #qnorm((1 - 0.95) / 2, 1, 0)
ls = p + Z * Sp
li = p - Z * Sp
print("p +- Z*Sp")
cat("ls = p + Z*Sp", ls)
cat("li = p - Z*Sp", li)
T = N * p
getwd
getwd()
setwd(getwd() + "R/Tarea5/")
setwd(cat(getwd(),"R/Tarea5/"))
setwd(paste(getwd(),"R/Tarea5/"))
setwd(paste(getwd(),"R/Tarea5/"))
dir <- paste(getwd(),"R/Tarea5/")
dir <- paste(getwd(),"/R/Tarea5/")
getwd()
dir <- cat(getwd(),"/R/Tarea5/")
dir <- paste0(getwd(),"/R/Tarea5/")
setwd(paste0(getwd(),"/R/Tarea5/"))
getwd()
source('~/R/Tarea5/Ejercicio1.R', echo=TRUE)
source("IO")
getwd()
dir()
source("IO.R")
source("Formulas.R")
help("commandArgs")
pbinom((1 - 0.95) / 2, 1, 0)
norm((1 - 0.95) / 2, 1, 0)
pnorm((1 - 0.95) / 2, 1, 0)
qnorm((1 - 0.95) / 2, 1, 0)
dnorm((1 - 0.95) / 2, 1, 0)
pnorm((1 - 0.95) / 2, 1, 0)
a = (1 - 0.95) / 2
pnorm(a, 1, 0)
pnorm(a, 0, 1)
pnorm(a, 0)
pnorm(a, 1)
pnorm(a, 1, 0)
qnorm(a, 1, 0)
qnorm(a, 1)
qnorm(a, 0)
qnorm(a, 0, 1)
qnorm(a, 0, 1)
pnorm(a, 0, 1)
dnorm(a, 0, 1)
1norm(a, 0, 1)
rnorm(a, 0, 1)
qnorm(a, 0, 1)
abs(qnorm(a, 1, 0))
abs(qnorm(a,0))
abs(qnorm(a,0,1))
abs(qnorm((1 - 0.94) / 2,0,1))
abs(qnorm((1 - 0.93) / 2,0,1))
abs(qnorm((1 - 0.50) / 2,0,1))
source('~/R/Tarea5/Ejercicio1.R', echo=TRUE)
ICT <- function(p, n, N, a)
{
return(IC(p, n, N, a) * N)
}
ICT(p, n, N, 0.95)
ICT(p, n, N, 0.95)
IC <- function(p, n, N, a)
{
Sp2 = ((N - n) / N) * (p * q / n)
Z = qnorm((1 - a) / 2, 0, 1)
return(Z * (Sp2 ^ (1 / 2)))
}
ICT(p, n, N, 0.95)
IC(p, n, N, 0.95)
IC <- function(p, n, N, a)
{
Sp2 = ((N - n) / N) * (p * q / n)
Z = abs(qnorm((1 - a) / 2, 0, 1))
return(Z * (Sp2 ^ (1 / 2)))
}
IC(p, n, N, 0.95)
ICT(p, n, N, 0.95)
as.integer(6)
y = 6
source('~/R/Tarea5/Ejercicio2.R', echo=TRUE)
as.double()
help("par")
par(mfrow=c(1,2))
barplot(dbinom(0:n,n,p), xlab="Numero de discos",
col=rainbow(20,s=.4,v=.9))
barplot(dbinom(0:8,8,d), xlab="Numero de discos",
col=rainbow(20,s=.4,v=.9))
barplot(dbinom(0:8,8,0.2), xlab="Numero de discos",
col=rainbow(20,s=.4,v=.9))
xAxis <- function(lim)
{
x <- c(0)
i = 0.0001
while(i <= lim)
{
x <- c(i)
i <- i + i
}
return(x)
}
xAxis(0.99)
{
x <- union(x, i)
i <- i + i
}
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
xAxis(0.99)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
xAxis(0.99)
help("barplot")
n<-c()
n[]
n+[]
n=[]
n = vector()
n = vector(1)
help("vector")
n = vector(2)
help("barplot")
Ns <- c(7000, 5000, 3000, 2000, 100, 300)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source("Formulas.R")
xAxis <- function(lim)
{
x <- c(0)
i = 0.0001
while(i <= lim)
{
x <- union(x, i)
i <- i + 0.0001
}
return(x)
}
Ns <- c(7000, 5000, 3000, 2000, 100, 300)
Z = ZValue(0.95)
d = 0.03
ps = xAxis(0.99)
n <- c()
for (N in Ns)
{
for(p in ps)
{
n <- union(n, SampleSize(N, Z, p, d))
}
}
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
ns[1]
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
plot(ns[[1]], type = "o", col = "blue")
help("plot")
plot(x = ps, y = ns[[1]], type = "o", col = "blue")
plot(x = ps, y = ns[[1]], type = "o", col = "blue")
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra")
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra")
lines(x = ps, y = ns[[2]], type="l", pch=22, lty=2, col="red")
help("lines")
lines(x = ps, y = ns[[4]], type="l", col="green")
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
lines(y = ns[[4]], type="l", col="green")
plot(y = ns, type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra")
plot(ns, type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra")
plot(ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra")
lines(x = ps, y = ns[[2]], type="l", col="red")
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", xlim = 1000)
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", xlim = 10000) )
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", xlim = 10000)
help("xlim")
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", xlim = c(1000,1))
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", ylim = c(0,1000))
lines(x = ps, y = ns[[2]], type="l", col="red")
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", ylim = c(0,100000))
lines(x = ps, y = ns[[2]], type="l", col="red")
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", ylim = c(0,1000))
plot(x = ps, y = ns[[1]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", ylim = c(0,1500))
lines(x = ps, y = ns[[2]], type="l", col="red")
plot(x = ps, y = ns[[2]], type = "l", col = "blue", xlab = "Valores de p", ylab = "Tamaño de la muestra", ylim = c(0,1500))
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
source('~/R/Tarea5/Ejercicio3.R', echo=TRUE)
View(IC)
